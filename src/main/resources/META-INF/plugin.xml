<idea-plugin require-restart="false">
    <id>com.broxus.t-sol</id>

    <name>T-Sol</name>
    <vendor email="hello@broxus.com" url="https://broxus.com">Broxus</vendor>

    <description><![CDATA[
      Threaded Solidity language used in fifth-generation asynchronous blockchains with dynamic sharding support, built on Everscale engine.

      <p>
        Contributions are always welcome!
      </p>
    ]]></description>

    <change-notes><![CDATA[
        <b>v1.6</b>
        Features:
        <ul>
          <li>Built-in elements have been updated up to the <b>0.74.0</b> compiler version</li>
          <li>Inspection for an element can be turned off by adding <code>'// noinspection &lt;name&gt;'</code> line before the element</li>
          <li>Autocomplete for the <code>'name'</code> in <code>'// noinspection &lt;name&gt;'</code> expression</li>
        </ul>
        Bugfixes:
        <ul>
            <li>Lexer do not crashes on a file containing a comment only</li>
            <li>References to the parent constructor are resolved correctly</li>
            <li>Nested names are resolved correctly by the outer name part</li>
            <li>Overloaded functions are not checked by 'Unused element inspection'</li>
            <li>Fixed performance problem in searching override functions. Functionality depending on this feature is turned back on</li>
        </ul>
        <b>v1.5</b>
        Features:
        <ul>
          <li>Support type arguments (aka generics) in built-in functions. Addresses <a href="https://github.com/broxus/intellij-t-sol/issues/#44">#44</a></li>
          <li>A new inspection for type validation in an assigment expression. Addresses <a href="https://github.com/broxus/intellij-t-sol/issues/#45">#45</a></li>
          <li>A new inspection for showing unused elements (imports, variables, parameters, modifiers, contracts, structs and enums). Addresses <a href="https://github.com/broxus/intellij-t-sol/issues/#43">#43</a></li>
          <li>Match built-in elements depending on a compiler version from the pragma header</li>
          <li>Support meta type expression, e.g. <code>type(uint32).min</code></li>
          <li>Built-in elements have been updated up to the 0.71.0 compiler version</li>
          <li>Show inline hints for imported names (if the imported name does not correspond to the file name or there are multiple names)</li>
        </ul>
        Bugfixes:
        <ul>
            <li>Do not resolve import with absolute file path as a relative one (fixes <a href="https://github.com/broxus/intellij-t-sol/issues/#46">#46</a>)</li>
            <li>Add import after the last pragma, not the first one (fixes <a href="https://github.com/broxus/intellij-t-sol/issues/#47">#47</a>)</li>
            <li>'Now' returns uint256 instead of uint32 (fixes <a href="https://github.com/broxus/intellij-t-sol/issues/#48">#48</a>)</li>
            <li>Performance has been improved when editing large files</li>
            <li>Nested names resolving is fixed</li>
            <li>Other various fixes</li>
        </ul>
        <b>v1.4</b>
        Features:
        <ul>
          <li>Support for var*Int, functionID and emptyMap. Support null for Optional type</li>
          <li>Support for size of int types in increments of 1</li>
          <li>Color scheme for json <a href="https://github.com/broxus/intellij-t-sol/issues/#22">#22</a></li>
          <li>Showing diagram of the contracts <a href="https://github.com/broxus/intellij-t-sol/issues/#26">#26</a></li>
          <li>Support inline refactoring <a href="https://github.com/broxus/intellij-t-sol/issues/#39">#39</a></li>
          <li>Support for import aliases <a href="https://github.com/broxus/intellij-t-sol/issues/#30">#30</a></li>
          <li>Unused elements inspection <a href="https://github.com/broxus/intellij-t-sol/issues/#43">#43</a></li>
          <li>SPDX License suggestions in autocomplete <a href="https://github.com/broxus/intellij-t-sol/issues/#41">#41</a></li>
          <li>Validate member access expressions</li>
          <li>Support element folding (including custom regions)</li>
          <li>Unimplemented members inspection</li>
          <li>Automatically remove unused elements when optimizing imports</li>
          <li>Treat function as overridden with 'override' modifier only</li>
          <li>Sort import definitions after applying the suggested import <a href="https://github.com/broxus/intellij-t-sol/issues/#40">#40</a></li>
        </ul>
        Bugfixes:
        <ul>
          <li>Fix resolving nested elements</li>
          <li>Do not show hints for varargs</li>
          <li>Fix parent constructor reference</li>
          <li>Modifiers from contracts defined in node modules are not detected <a href="https://github.com/broxus/intellij-t-sol/issues/#38">#38</a></li>
        </ul>
        <b>v1.3</b>
        Features:
        <ul>
          <li>Support for Library methods in autocomplete <a href="https://github.com/broxus/intellij-t-sol/issues/#35">#35</a></li>
          <li>'implement all members' feature <a href="https://github.com/broxus/intellij-t-sol/issues/#29">#29</a></li>
          <li>Import suggestions in autocomplete <a href="https://github.com/broxus/intellij-t-sol/issues/#25">#25</a></li>
          <li>Support for the Move refactoring <a href="https://github.com/broxus/intellij-t-sol/issues/#24">#24</a></li>
          <li>Color scheme for json  <a href="https://github.com/broxus/intellij-t-sol/issues/#22">#22</a></li>
          <li>The function parameter placeholder are shown <a href="https://github.com/broxus/intellij-t-sol/issues/#21">#21</a></li>
          <li>Support autocomplete for library methods <a href="https://github.com/broxus/intellij-t-sol/issues/#35">#35</a></li>
          <li>Support for var*Int, functionID and emptyMap keywords</li>
          <li>Number literal type inference of function argument based on parameter type <a href="https://github.com/broxus/intellij-t-sol/issues/#32">#32</a></li>
        </ul>
        Bugfixes:
        <ul>
          <li>Natspec comments starting from /** break syntax highlighting <a href="https://github.com/broxus/intellij-t-sol/issues/#33">#33</a></li>
          <li>Standard functions valueToGas() and gasToValue() are marked as undefined <a href="https://github.com/broxus/intellij-t-sol/issues/#36">#36</a></li>
          <li>Fixed resolving of an alias type <a href="https://github.com/broxus/intellij-t-sol/issues/#31">#31</a></li>
          <li>Fixed resolving of a variable definition with initializer containing parenthesis</li>
        </ul>
        <b>v1.2</b>
        <br/>
        Minimum IDE version bumped to 2022.2
        <br/>
        The following issues have been fixed:
        <ul>
        <li>Broken lookup for libraries renamed on import <a href="https://github.com/broxus/intellij-t-sol/issues/#30">#30</a></li>
        <li>Plugin doesn't see any structures that the interface contains <a href="https://github.com/broxus/intellij-t-sol/issues/#28">#28</a></li>
        <li>Interface sub-structures autocomplete not working in some cases <a href="https://github.com/broxus/intellij-t-sol/issues/#27">#27</a></li>
        <li>Fix project structure visualization <a href="https://github.com/broxus/intellij-t-sol/issues/#23">#23</a></li>
        <li>Formatter issues  <a href="https://github.com/broxus/intellij-t-sol/issues/#20">#20</a></li>
        <li>AST is broken when the line wasn't completed  <a href="https://github.com/broxus/intellij-t-sol/issues/#19">#19</a></li>
        <li>Tsol doesn't allow public & static reversed order  <a href="https://github.com/broxus/intellij-t-sol/issues/#18">#18</a></li>
        <li>Incorrect tx namespace entries  <a href="https://github.com/broxus/intellij-t-sol/issues/#17">#17</a></li>
        <li>Autocompletion for pragma AbiHeader  <a href="https://github.com/broxus/intellij-t-sol/issues/#15">#15</a></li>
        <li>Some function specifiers are not highlighted  <a href="https://github.com/broxus/intellij-t-sol/issues/#14">#14</a></li>
        <li>Adding of pragma ignoreIntOverflow ruins parser  <a href="https://github.com/broxus/intellij-t-sol/issues/#13">#13</a></li>
        <li><constant variable declaration>, <contract definition>, <expression>, <function definition>, <function invocation>, enum, error, import, pragma, stringLiteral, struct, type or using expected, got ';'  <a href="https://github.com/broxus/intellij-t-sol/issues/#12">#12</a></li>
        <li>Support for Vector type  <a href="https://github.com/broxus/intellij-t-sol/issues/#11">#11</a></li>
        <li>Can not pass non-optional variable as optional param to function <a href="https://github.com/broxus/intellij-t-sol/issues/#9">#9</a></li>
        <li>Types from tuple mismatch when passing them to function <a href="https://github.com/broxus/intellij-t-sol/issues/#8">#8</a></li>
        <li>Lexer issue with optional params inside abi.decode <a href="https://github.com/broxus/intellij-t-sol/issues/#7">#7</a></li>
        </ul>
        <b>v1.1</b>
        <ul>
          <li>Showing documentation when hovering on an element (function, state variable etc.)</li>
          <li>Added documentation for built-in elements</li>
          <li>Checking the type of function call arguments</li>
          <li>New icons</li>
        </ul>
        <b>v1.0.2</b>
        <ul>
          <li>Plugin is now compatible with the IntelliJ-Solidity one</li>
        </ul>
        <b>v1.0.1</b>
        <ul>
          <li>Fixed error reporting link</li>
        </ul>
        <b>v1.0.0</b>
        <ul>
          <li>Basic support for Ever Solidity</li>
        </ul>
      </p>
    ]]>
    </change-notes>

    <!--
        See https://plugins.jetbrains.com/docs/intellij/build-number-ranges.html
        See https://youtrack.jetbrains.com/articles/IDEA-A-2100661473/IntelliJ-IDEA-2022.2.5-222.4554.10-build-Release-Notes
        222.4554.10 is IntelliJ IDEA 2022.2.5
    -->
    <idea-version since-build="222.4554.10"/>

    <!-- See https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html for the full list of modules -->
    <depends>com.intellij.modules.lang</depends>
    <!--
        The below might not be strictly necessary, however, it's required as per
        https://plugins.jetbrains.com/docs/intellij/webstorm.html#configuring-plugin-projects-targeting-webstorm
        in order to include JavaScript.
    -->
    <depends>com.intellij.modules.platform</depends>
    <depends optional="true" config-file="diagramsPlugin.xml">com.intellij.diagram</depends>
    <depends optional="true" config-file="javascriptPlugin.xml">JavaScript</depends>

    <extensions defaultExtensionNs="com.intellij">
        <fileType name="T-Sol File"
                  language="T-Sol"
                  implementationClass="com.broxus.solidity.lang.TSolidityFileType"
                  extensions="tsol"
                  fieldName="INSTANCE"/>
        <projectService serviceImplementation="com.broxus.solidity.lang.types.SolInternalTypeFactory"/>

        <lang.parserDefinition language="T-Sol"
                               implementationClass="com.broxus.solidity.lang.core.SolidityParserDefinition"/>

        <lang.syntaxHighlighterFactory language="T-Sol"
                                       implementationClass="com.broxus.solidity.ide.SolHighlighterFactory"/>

        <annotator language="T-Sol" implementationClass="com.broxus.solidity.ide.annotation.SolidityAnnotator"/>

        <renamePsiElementProcessor implementation="com.broxus.solidity.ide.refactoring.RenameContractProcessor"/>
        <renamePsiElementProcessor implementation="com.broxus.solidity.ide.refactoring.RenameConstructorProcessor"/>
        <renamePsiElementProcessor implementation="com.broxus.solidity.ide.refactoring.SolRenameFileProcessor"/>
        <refactoring.moveHandler implementation="com.broxus.solidity.ide.refactoring.SolMoveHandler" order="first"/>
        <lang.refactoringSupport language="T-Sol" implementationClass="com.broxus.solidity.ide.refactoring.SolRenameFileRefactoringSupportProvider"/>

        <!-- Commenter -->
        <lang.commenter language="T-Sol" implementationClass="com.broxus.solidity.ide.SolCommenter"/>

        <!-- Brace Matcher -->
        <lang.braceMatcher language="T-Sol" implementationClass="com.broxus.solidity.ide.SolBraceMatcher"/>

        <!-- Quote Handlers -->
        <lang.quoteHandler language="T-Sol" implementationClass="com.broxus.solidity.ide.SolQuoteTokenHandler"/>

        <lang.documentationProvider language="T-Sol" implementationClass="com.broxus.solidity.ide.hints.SolDocumentationProvider"/>

        <codeInsight.parameterNameHints implementationClass="com.broxus.solidity.ide.hints.SolParameterInlayHintProvider"
                                        language="T-Sol"/>

        <!-- Hints -->
        <codeInsight.typeInfo language="T-Sol"
                              implementationClass="com.broxus.solidity.ide.hints.SolExpressionTypeProvider"/>
        <codeInsight.parameterInfo language="T-Sol"
                                   implementationClass="com.broxus.solidity.ide.hints.SolParameterInfoHandler"/>

        <completion.contributor language="T-Sol"
                                implementationClass="com.broxus.solidity.lang.completion.SolBaseTypesCompletionContributor"/>
        <completion.contributor language="T-Sol"
                                implementationClass="com.broxus.solidity.lang.completion.SolKeywordCompletionContributor"/>
        <completion.contributor language="T-Sol"
                                implementationClass="com.broxus.solidity.lang.completion.SolFunctionCompletionContributor"/>
        <completion.contributor language="T-Sol"
                                implementationClass="com.broxus.solidity.lang.completion.SolContextCompletionContributor"/>
        <completion.contributor language="T-Sol"
                                implementationClass="com.broxus.solidity.lang.completion.SolNatSpecCompletionContributor"/>
        <completion.contributor language="T-Sol"
                                implementationClass="com.broxus.solidity.lang.completion.SolNoInspectionNameCompletionContributor"/>

        <lang.formatter language="T-Sol"
                        implementationClass="com.broxus.solidity.ide.formatting.SolidityFormattingModelBuilder"/>

        <codeInsight.lineMarkerProvider language="T-Sol"
                                        implementationClass="com.broxus.solidity.ide.annotation.SolidityLineMarkerProvider"/>

        <codeInsight.implementMethod language="T-Sol" implementationClass="com.broxus.solidity.ide.actions.ImplementMethodsHandler"/>

        <internalFileTemplate name="T-Sol Contract"/>
        <internalFileTemplate name="T-Sol Abstract Contract"/>
        <internalFileTemplate name="T-Sol Library"/>
        <internalFileTemplate name="T-Sol Interface"/>

        <stubIndex implementation="com.broxus.solidity.lang.stubs.SolNamedElementIndex"/>
        <stubIndex implementation="com.broxus.solidity.lang.stubs.SolGotoClassIndex"/>
        <stubIndex implementation="com.broxus.solidity.lang.stubs.SolModifierIndex"/>
        <stubIndex implementation="com.broxus.solidity.lang.stubs.SolEventIndex"/>
        <stubIndex implementation="com.broxus.solidity.lang.stubs.SolErrorIndex"/>
        <stubIndex implementation="com.broxus.solidity.lang.stubs.SolFunctionIndex"/>
        <stubIndex implementation="com.broxus.solidity.lang.stubs.SolImportIndex"/>

        <gotoClassContributor implementation="com.broxus.solidity.ide.navigation.SolClassNavigationContributor"/>
        <gotoSymbolContributor implementation="com.broxus.solidity.ide.navigation.SolSymbolNavigationContributor"/>
        <definitionsScopedSearch implementation="com.broxus.solidity.ide.navigation.SolContractImplementationSearcher"/>

        <lang.foldingBuilder language="T-Sol" implementationClass="com.broxus.solidity.ide.SolidityFoldingBuilder"/>
        <customFoldingProvider implementation="com.broxus.solidity.ide.VisualStudioCustomFoldingProvider"/>

        <lang.findUsagesProvider language="T-Sol" implementationClass="com.broxus.solidity.ide.SolFindUsagesProvider"/>

        <spellchecker.support language="T-Sol" implementationClass="com.broxus.solidity.ide.SolSpellcheckingStrategy"/>

        <!-- Code style -->

        <codeStyleSettingsProvider implementation="com.broxus.solidity.ide.formatting.SolCodeStyleSettingsProvider"/>
        <langCodeStyleSettingsProvider
                implementation="com.broxus.solidity.ide.formatting.SolLanguageCodeStyleSettingsProvider"/>

        <lang.importOptimizer language="T-Sol" implementationClass="com.broxus.solidity.ide.formatting.SolImportOptimizer"/>

        <!-- Color settings -->
        <colorSettingsPage implementation="com.broxus.solidity.ide.colors.SolColorSettingsPage"/>

        <lang.psiStructureViewFactory language="T-Sol"
                                      implementationClass="com.broxus.solidity.ide.SolPsiStructureViewFactory"/>

        <lang.inspectionSuppressor language="T-Sol"
                                   implementationClass="com.broxus.solidity.ide.inspections.SolInspectionSuppressor"/>

        <localInspection language="T-Sol" groupName="T-Sol"
                         displayName="Suicide is deprecated. Use selfdestruct instead EIP 6"
                         enabledByDefault="true"
                         level="WARNING"
                         implementationClass="com.broxus.solidity.ide.inspections.SelfdestructRenameInspection"/>

        <localInspection language="T-Sol" groupName="T-Sol"
                         displayName="Function has no modifiers and might modify owners of the contract"
                         enabledByDefault="true"
                         level="WARNING"
                         implementationClass="com.broxus.solidity.ide.inspections.UnprotectedFunctionInspection"/>

        <localInspection language="T-Sol" groupName="T-Sol"
                         displayName="Name can not be resolved"
                         enabledByDefault="true"
                         level="WARNING"
                         implementationClass="com.broxus.solidity.ide.inspections.ResolveNameInspection"/>

        <localInspection language="T-Sol" groupName="T-Sol"
                         displayName="No return statement"
                         enabledByDefault="true"
                         level="WARNING"
                         implementationClass="com.broxus.solidity.ide.inspections.NoReturnInspection"/>

        <localInspection language="T-Sol" groupName="T-Sol"
                         displayName="Linearization impossible"
                         enabledByDefault="true"
                         level="WARNING"
                         implementationClass="com.broxus.solidity.ide.inspections.LinearizationImpossibleInspection"/>

        <localInspection language="T-Sol" groupName="T-Sol"
                         displayName="Function call arguments are not matched with the parameters of function definition"
                         enabledByDefault="true"
                         level="ERROR"
                         implementationClass="com.broxus.solidity.ide.inspections.FunctionArgumentsInspection"/>

        <localInspection language="T-Sol" groupName="T-Sol"
                                 displayName="Element is never used"
                                 enabledByDefault="true"
                                 level="WEAK WARNING"
                                 implementationClass="com.broxus.solidity.ide.inspections.UnusedElementInspection"/>

        <localInspection language="T-Sol" groupName="T-Sol"
                                 displayName="Member is not defined"
                                 enabledByDefault="true"
                                 level="ERROR"
                                 implementationClass="com.broxus.solidity.ide.inspections.MemberAccessInspection"/>
        <localInspection language="T-Sol" groupName="T-Sol"
                         displayName="Members are not implemented"
                         enabledByDefault="true"
                         level="ERROR"
                         implementationClass="com.broxus.solidity.ide.inspections.UnimplementedMemberInspection"/>

        <localInspection language="T-Sol" groupName="T-Sol"
                                 displayName="Assigment types validation"
                                 enabledByDefault="true"
                                 level="ERROR"
                                 implementationClass="com.broxus.solidity.ide.inspections.AssignmentInspection"/>

        <errorHandler implementation="com.broxus.solidity.ide.SentryReportSubmitter"/>

        <defaultLiveTemplates file="/liveTemplates/Solidity.xml"/>
        <liveTemplateContext
                implementation="com.broxus.solidity.ide.liveTemplates.SolTemplateContextType"/>

        <fileIconPatcher id="tSolFilePatcher" implementation="com.broxus.solidity.ide.annotation.TSolFileIconPatcher"/>
    </extensions>

    <actions>
        <action id="t-sol.file.create"
                class="com.broxus.solidity.ide.actions.SolCreateFileAction"
                text="Smart Contract" description="Create new solidity contract">
            <add-to-group group-id="NewGroup" anchor="after" relative-to-action="NewDir"/>
        </action>

          <action id="ImplementMembers" class="com.broxus.solidity.ide.actions.ImplementMembersAction">
              <add-to-group group-id="GenerateGroup"/>
          </action>

    </actions>

</idea-plugin>
